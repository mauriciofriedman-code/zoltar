# test_pipeline.py
import importlib
import pkgutil
from pathlib import Path
from backend import config

print("=== üîç TEST DEL PIPELINE RAG ===")

# --- Rutas principales ---
print(f"BASE_DIR:   {config.BASE_DIR}")
print(f"DOCS_DIR:   {config.DOCS_DIR} -> {'‚úÖ existe' if config.DOCS_DIR.exists() else '‚ùå no existe'}")
print(f"CHROMA_DIR: {config.CHROMA_DIR} -> {'‚úÖ existe' if config.CHROMA_DIR.exists() else '‚ùå no existe'}")

# --- Listar PDFs en DOCS_DIR ---
if config.DOCS_DIR.exists():
    pdfs = list(config.DOCS_DIR.glob("*.pdf"))
    if pdfs:
        print("\nüìë Archivos PDF encontrados:")
        for pdf in pdfs:
            print(" -", pdf)
    else:
        print("\n‚ö†Ô∏è No hay PDFs en DOCS_DIR.")
else:
    print("\n‚ö†Ô∏è DOCS_DIR no existe.")

# --- Listar archivos en CHROMA_DIR ---
if config.CHROMA_DIR.exists():
    files = list(config.CHROMA_DIR.glob("*"))
    if files:
        print(f"\nüì¶ Archivos en CHROMA_DIR ({len(files)}):")
        for f in files:
            print(" -", f)
    else:
        print("\n‚ö†Ô∏è CHROMA_DIR est√° vac√≠o (se llenar√° tras la ingesta).")
else:
    print("\n‚ö†Ô∏è CHROMA_DIR no existe todav√≠a.")

# --- Verificar m√≥dulo retrieve ---
print("\n=== üîç Verificaci√≥n del m√≥dulo retrieve ===")
try:
    module = importlib.import_module("backend.routes.retrieve")
    print("‚úÖ backend.routes.retrieve se import√≥ correctamente.")

    if hasattr(module, "get_retriever"):
        print("‚úÖ Funci√≥n get_retriever encontrada en retrieve.py")
    else:
        print("‚ùå No se encontr√≥ la funci√≥n get_retriever en retrieve.py")

    if hasattr(module, "ingest_docs"):
        print("‚úÖ Funci√≥n ingest_docs encontrada en retrieve.py")
    else:
        print("‚ö†Ô∏è No se encontr√≥ la funci√≥n ingest_docs en retrieve.py")

except ModuleNotFoundError:
    print("‚ùå No existe el m√≥dulo backend.routes.retrieve")

# --- Listar todos los m√≥dulos de backend.routes ---
print("\n=== üìÇ Archivos en backend/routes/ ===")
routes_path = Path(config.BASE_DIR) / "routes"
if routes_path.exists():
    for module_info in pkgutil.iter_modules([str(routes_path)]):
        print(" -", module_info.name)
else:
    print("‚ö†Ô∏è No existe la carpeta backend/routes")
